worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
	multi_accept on;
	use epoll;
}

http {
	include mime.types;

	#cache options
	open_file_cache max=1000 inactive=20s;
	open_file_cache_valid 20s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	#client body
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;

    client_max_body_size 100M;
    client_body_buffer_size 50M;
    client_header_buffer_size 300K;
    large_client_header_buffers 2 1k;

    keepalive_timeout  120;
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;
    proxy_temp_path /tmp/proxy;
    proxy_temp_file_write_size 1000m;

	#timeout
	send_timeout 10;

	#GZip configuration
	gzip on;
	gzip_min_length 100;
	gzip_comp_level 3;
	gzip_types text/plain text/css text/javascript application/javascript application/x-javascript;
	gzip_types application/json image/png image/jpeg image/gif;
	gzip_types text/html text/xml;

	#backend response cache
	proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=microcache:10m max_size=500m;
	proxy_cache_key "$scheme$request_method$host$request_uri";
	add_header microcache-status $upstream_cache_status;

	server{
		server_name cinemascope.space;
		listen 443 ssl http2;
    		ssl_certificate /etc/letsencrypt/live/cinemascope.space/fullchain.pem;
    		ssl_certificate_key /etc/letsencrypt/live/cinemascope.space/privkey.pem;
    		include /etc/letsencrypt/options-ssl-nginx.conf;
    		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
		#cache config
        	set $no_cache 0;
        	if ($request_method = POST) { set $no_cache 1; }
        	if ($query_string != "") {set $no_cache 1; }

		root /static/2020_2_Jigglypuff/dist/;
		location /api/ {
			#include proxy_params;
			#access_log off;
			#proxy_cache microcache;
			#proxy_cache_valid 200 10m;
			#proxy_cache_bypass $no_cache;
			#proxy_no_cache $no_cache;

			proxy_pass http://app:8080;

		}
		location ~ ^/static(.*){
			#access_log off;
			error_log /var/log/nginx/error_downloads.log;
			try_files $1 =404;
		}
		location /media/ {
			expires 7d;
			#internal;
			error_log /var/log/nginx/error_media.log;
			root /;
	    }
	    location /codes/ {
        			expires 7d;
        			#internal;
        			error_log /var/log/nginx/error_media.log;
        			root /;
        }
	    location /sw.js {
	        error_log /var/log/nginx/error_sw.log;
	        try_files /sw.js =404;
	    }
	    location / {
            error_log /var/log/nginx/error_index.log;
            try_files /index.html =404;
        }

	}
	server{
	    listen 80;
	    server_name _;
	    return 301 https://$host$request_uri;
	}
}