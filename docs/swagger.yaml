basePath: /
definitions:
  models.AuthInput:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    type: object
  models.Cinema:
    properties:
      address:
        type: string
      authorID:
        type: integer
      hallCount:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  models.CinemaHall:
    properties:
      id:
        type: integer
      placeAmount:
        type: integer
      placeConfig:
        type: string
    type: object
  models.Movie:
    properties:
      ageGroup:
        type: integer
      country:
        type: string
      description:
        type: string
      duration:
        type: integer
      genre:
        type: string
      id:
        type: integer
      name:
        type: string
      pathToAvatar:
        type: string
      personalRating:
        type: integer
      producer:
        type: string
      rating:
        type: number
      ratingCount:
        type: integer
      releaseYear:
        type: integer
    type: object
  models.MovieList:
    properties:
      ageGroup:
        type: integer
      country:
        type: string
      description:
        type: string
      duration:
        type: integer
      genre:
        type: string
      id:
        type: integer
      name:
        type: string
      pathToAvatar:
        type: string
      producer:
        type: string
      rating:
        type: number
      ratingCount:
        type: integer
      releaseYear:
        type: integer
    type: object
  models.Profile:
    properties:
      avatarPath:
        type: string
      name:
        type: string
      surname:
        type: string
    type: object
  models.RateMovie:
    properties:
      id:
        type: integer
      rating:
        type: integer
    type: object
  models.RegistrationInput:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    type: object
  models.Schedule:
    properties:
      cinemaID:
        type: integer
      hallID:
        type: integer
      id:
        type: integer
      movieID:
        type: integer
      premierTime:
        type: string
    type: object
  models.ServerResponse:
    properties:
      response:
        type: string
      statusCode:
        type: integer
    type: object
  models.Ticket:
    properties:
      id:
        type: integer
      placeField:
        $ref: '#/definitions/models.TicketPlace'
      schedule:
        $ref: '#/definitions/models.Schedule'
      transactionDate:
        type: string
      Login:
        type: string
    required:
    - Login
    type: object
  models.TicketInput:
    properties:
      hallID:
        type: integer
      placeField:
        $ref: '#/definitions/models.TicketPlace'
      scheduleID:
        type: integer
      Login:
        type: string
    required:
    - Login
    type: object
  models.TicketPlace:
    properties:
      place:
        type: integer
      row:
        type: integer
    type: object
host: https://cinemascope.space
info:
  contact: {}
  description: This is a backend API
  title: CinemaScope Backend API
  version: "0.5"
paths:
  /auth/login/:
    post:
      consumes:
      - application/json
      description: login user and get cookie
      operationId: login-user-by-login-data
      parameters:
      - description: Login information
        in: body
        name: Login_info
        required: true
        schema:
          $ref: '#/definitions/models.AuthInput'
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: login
  /auth/logout/:
    post:
      description: SignOut user
      operationId: SignOut-user-by-register-data
      responses:
        "200": {}
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: SignOut
  /auth/register/:
    post:
      consumes:
      - application/json
      description: register user and get cookie
      operationId: register-user-by-register-data
      parameters:
      - description: Register information
        in: body
        name: Register_info
        required: true
        schema:
          $ref: '#/definitions/models.RegistrationInput'
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: Register
  /cinema/:
    get:
      description: Get cinema list
      operationId: cinema-list-id
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cinema'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: GetCinemaList
  /cinema/{id}/:
    get:
      description: Get cinema
      operationId: cinema-id
      parameters:
      - description: cinema id param
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cinema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: GetCinema
  /hall/{id}/:
    get:
      description: Get cinema hall placement structure
      operationId: hall-id
      parameters:
      - description: hall id param
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CinemaHall'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: Get hall structure
  /movie/:
    get:
      description: Get movie list
      operationId: movie-list-id
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MovieList'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: GetMovieList
  /movie/{id}/:
    get:
      description: Get movie
      operationId: movie-id
      parameters:
      - description: movie id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: GetMovie
  /movie/actual/:
    get:
      description: Returns movie that in the cinema
      operationId: movie-in-cinema-id
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MovieList'
            type: array
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "401":
          description: No authorization
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: Get movies in cinema
  /movie/rate/:
    post:
      consumes:
      - application/json
      description: Rate movie
      operationId: movie-rate-id
      parameters:
      - description: Login information
        in: body
        name: Login_info
        required: true
        schema:
          $ref: '#/definitions/models.RateMovie'
      responses:
        "200": {}
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "401":
          description: No authorization
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: RateMovie
  /profile/:
    get:
      description: Get Profile
      operationId: profile-id
      parameters:
      - description: Cookie information
        in: header
        name: Cookie_info
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Profile'
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "401":
          description: No authorization
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: GetProfile
    put:
      description: Get Profile
      operationId: profile-update-id
      parameters:
      - in: formData
        name: avatar
        type: string
      - in: formData
        name: name
        type: string
      - in: formData
        name: surname
        type: string
      responses:
        "200": {}
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "401":
          description: No authorization
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: GetProfile
  /schedule/:
    get:
      description: Returns movie schedule by getting movie id, cinema id and day(date) in format schedule.TimeStandard
      operationId: movie-schedule-id
      parameters:
      - description: schedule.MovieIDQueryParamName
        in: query
        name: schedule.MovieIDQueryParamName
        required: true
        type: integer
      - description: schedule.CinemaIDQueryParamName
        in: query
        name: schedule.CinemaIDQueryParamName
        required: true
        type: integer
      - description: schedule.DateQueryParamName
        in: query
        name: schedule.DateQueryParamName
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Schedule'
            type: array
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: Get movie schedule
  /ticket/:
    get:
      description: Get user ticket list
      operationId: get-ticket-list-id
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Ticket'
            type: array
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "401":
          description: No auth
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "500":
          description: Internal err
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: Get user ticket list
  /ticket/{id}/:
    get:
      description: Get user ticket by id
      operationId: get-ticket-id
      parameters:
      - description: ticket id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Ticket'
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "401":
          description: No auth
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "500":
          description: Internal err
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: Get user ticket
  /ticket/buy/:
    post:
      consumes:
      - application/json
      description: Buys ticket by schedule ID and place to authenticated user or by e-mail
      operationId: buy-ticket-id
      parameters:
      - description: Ticket info
        in: body
        name: Ticket_info
        required: true
        schema:
          $ref: '#/definitions/models.TicketInput'
      responses:
        "200": {}
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: Buy ticket
  /ticket/schedule/{id}/:
    get:
      description: Get schedule hall ticket list by id
      operationId: get-schedule-ticket-list-id
      parameters:
      - description: ticketService.ScheduleIDName
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TicketPlace'
            type: array
        "400":
          description: Bad body
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/models.ServerResponse'
        "500":
          description: Internal err
          schema:
            $ref: '#/definitions/models.ServerResponse'
      summary: Get schedule hall ticket list
swagger: "2.0"
