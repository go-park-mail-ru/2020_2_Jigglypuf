// Code generated by MockGen. DO NOT EDIT.
// Source: CookieRepository.go

// Package mock is a generated GoMock package.
package mock

import (
	models "backend/internal/pkg/models"
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetCookie mocks base method
func (m *MockRepository) GetCookie(arg0 *http.Cookie) (*models.DBResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCookie", arg0)
	ret0, _ := ret[0].(*models.DBResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCookie indicates an expected call of GetCookie
func (mr *MockRepositoryMockRecorder) GetCookie(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCookie", reflect.TypeOf((*MockRepository)(nil).GetCookie), arg0)
}

// SetCookie mocks base method
func (m *MockRepository) SetCookie(cookie *http.Cookie, userID uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetCookie", cookie, userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCookie indicates an expected call of SetCookie
func (mr *MockRepositoryMockRecorder) SetCookie(cookie, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCookie", reflect.TypeOf((*MockRepository)(nil).SetCookie), cookie, userID)
}

// RemoveCookie mocks base method
func (m *MockRepository) RemoveCookie(cookie *http.Cookie) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveCookie", cookie)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveCookie indicates an expected call of RemoveCookie
func (mr *MockRepositoryMockRecorder) RemoveCookie(cookie interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveCookie", reflect.TypeOf((*MockRepository)(nil).RemoveCookie), cookie)
}
