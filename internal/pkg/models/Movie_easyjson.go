// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels(in *jlexer.Lexer, out *SearchMovie) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels(out *jwriter.Writer, in SearchMovie) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SearchMovie) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SearchMovie) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SearchMovie) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SearchMovie) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels(l, v)
}
func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels1(in *jlexer.Lexer, out *RatingSet) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "MovieRating":
			if in.IsNull() {
				in.Skip()
				out.MovieRating = nil
			} else {
				if out.MovieRating == nil {
					out.MovieRating = new(Movie)
				}
				(*out.MovieRating).UnmarshalEasyJSON(in)
			}
		case "Rating":
			out.Rating = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels1(out *jwriter.Writer, in RatingSet) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"MovieRating\":"
		out.RawString(prefix[1:])
		if in.MovieRating == nil {
			out.RawString("null")
		} else {
			(*in.MovieRating).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"Rating\":"
		out.RawString(prefix)
		out.Int64(int64(in.Rating))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RatingSet) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RatingSet) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RatingSet) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RatingSet) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels1(l, v)
}
func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels2(in *jlexer.Lexer, out *RatingInput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "rating":
			out.Rating = int64(in.Int64())
		case "moviename":
			out.MovieName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels2(out *jwriter.Writer, in RatingInput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"rating\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Rating))
	}
	{
		const prefix string = ",\"moviename\":"
		out.RawString(prefix)
		out.String(string(in.MovieName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RatingInput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RatingInput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RatingInput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RatingInput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels2(l, v)
}
func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels3(in *jlexer.Lexer, out *RateMovie) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "rating":
			out.Rating = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels3(out *jwriter.Writer, in RateMovie) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"rating\":"
		out.RawString(prefix)
		out.Int64(int64(in.Rating))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RateMovie) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RateMovie) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RateMovie) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RateMovie) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels3(l, v)
}
func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels4(in *jlexer.Lexer, out *MovieList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			out.ID = uint64(in.Uint64())
		case "Name":
			out.Name = string(in.String())
		case "Description":
			out.Description = string(in.String())
		case "GenreList":
			if in.IsNull() {
				in.Skip()
				out.GenreList = nil
			} else {
				in.Delim('[')
				if out.GenreList == nil {
					if !in.IsDelim(']') {
						out.GenreList = make(GenreList, 0, 2)
					} else {
						out.GenreList = GenreList{}
					}
				} else {
					out.GenreList = (out.GenreList)[:0]
				}
				for !in.IsDelim(']') {
					var v1 Genre
					(v1).UnmarshalEasyJSON(in)
					out.GenreList = append(out.GenreList, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "Duration":
			out.Duration = int(in.Int())
		case "Producer":
			out.Producer = string(in.String())
		case "Country":
			out.Country = string(in.String())
		case "ReleaseYear":
			out.ReleaseYear = int(in.Int())
		case "AgeGroup":
			out.AgeGroup = int(in.Int())
		case "Rating":
			out.Rating = float64(in.Float64())
		case "RatingCount":
			out.RatingCount = int(in.Int())
		case "ActorList":
			if in.IsNull() {
				in.Skip()
				out.ActorList = nil
			} else {
				in.Delim('[')
				if out.ActorList == nil {
					if !in.IsDelim(']') {
						out.ActorList = make(ActorList, 0, 0)
					} else {
						out.ActorList = ActorList{}
					}
				} else {
					out.ActorList = (out.ActorList)[:0]
				}
				for !in.IsDelim(']') {
					var v2 Actor
					(v2).UnmarshalEasyJSON(in)
					out.ActorList = append(out.ActorList, v2)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "PathToAvatar":
			out.PathToAvatar = string(in.String())
		case "PathToSliderAvatar":
			out.PathToSliderAvatar = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels4(out *jwriter.Writer, in MovieList) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"Name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"Description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"GenreList\":"
		out.RawString(prefix)
		if in.GenreList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v3, v4 := range in.GenreList {
				if v3 > 0 {
					out.RawByte(',')
				}
				(v4).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"Duration\":"
		out.RawString(prefix)
		out.Int(int(in.Duration))
	}
	{
		const prefix string = ",\"Producer\":"
		out.RawString(prefix)
		out.String(string(in.Producer))
	}
	{
		const prefix string = ",\"Country\":"
		out.RawString(prefix)
		out.String(string(in.Country))
	}
	{
		const prefix string = ",\"ReleaseYear\":"
		out.RawString(prefix)
		out.Int(int(in.ReleaseYear))
	}
	{
		const prefix string = ",\"AgeGroup\":"
		out.RawString(prefix)
		out.Int(int(in.AgeGroup))
	}
	{
		const prefix string = ",\"Rating\":"
		out.RawString(prefix)
		out.Float64(float64(in.Rating))
	}
	{
		const prefix string = ",\"RatingCount\":"
		out.RawString(prefix)
		out.Int(int(in.RatingCount))
	}
	{
		const prefix string = ",\"ActorList\":"
		out.RawString(prefix)
		if in.ActorList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.ActorList {
				if v5 > 0 {
					out.RawByte(',')
				}
				(v6).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"PathToAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToAvatar))
	}
	{
		const prefix string = ",\"PathToSliderAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToSliderAvatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MovieList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MovieList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MovieList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MovieList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels4(l, v)
}
func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels5(in *jlexer.Lexer, out *Movie) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			out.ID = uint64(in.Uint64())
		case "Name":
			out.Name = string(in.String())
		case "Description":
			out.Description = string(in.String())
		case "GenreList":
			if in.IsNull() {
				in.Skip()
				out.GenreList = nil
			} else {
				in.Delim('[')
				if out.GenreList == nil {
					if !in.IsDelim(']') {
						out.GenreList = make(GenreList, 0, 2)
					} else {
						out.GenreList = GenreList{}
					}
				} else {
					out.GenreList = (out.GenreList)[:0]
				}
				for !in.IsDelim(']') {
					var v7 Genre
					(v7).UnmarshalEasyJSON(in)
					out.GenreList = append(out.GenreList, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "Duration":
			out.Duration = int(in.Int())
		case "Producer":
			out.Producer = string(in.String())
		case "Country":
			out.Country = string(in.String())
		case "ReleaseYear":
			out.ReleaseYear = int(in.Int())
		case "AgeGroup":
			out.AgeGroup = int(in.Int())
		case "Rating":
			out.Rating = float64(in.Float64())
		case "RatingCount":
			out.RatingCount = int(in.Int())
		case "PersonalRating":
			out.PersonalRating = int64(in.Int64())
		case "ActorList":
			if in.IsNull() {
				in.Skip()
				out.ActorList = nil
			} else {
				in.Delim('[')
				if out.ActorList == nil {
					if !in.IsDelim(']') {
						out.ActorList = make(ActorList, 0, 0)
					} else {
						out.ActorList = ActorList{}
					}
				} else {
					out.ActorList = (out.ActorList)[:0]
				}
				for !in.IsDelim(']') {
					var v8 Actor
					(v8).UnmarshalEasyJSON(in)
					out.ActorList = append(out.ActorList, v8)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "PathToAvatar":
			out.PathToAvatar = string(in.String())
		case "PathToSliderAvatar":
			out.PathToSliderAvatar = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels5(out *jwriter.Writer, in Movie) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"Name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"Description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"GenreList\":"
		out.RawString(prefix)
		if in.GenreList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v9, v10 := range in.GenreList {
				if v9 > 0 {
					out.RawByte(',')
				}
				(v10).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"Duration\":"
		out.RawString(prefix)
		out.Int(int(in.Duration))
	}
	{
		const prefix string = ",\"Producer\":"
		out.RawString(prefix)
		out.String(string(in.Producer))
	}
	{
		const prefix string = ",\"Country\":"
		out.RawString(prefix)
		out.String(string(in.Country))
	}
	{
		const prefix string = ",\"ReleaseYear\":"
		out.RawString(prefix)
		out.Int(int(in.ReleaseYear))
	}
	{
		const prefix string = ",\"AgeGroup\":"
		out.RawString(prefix)
		out.Int(int(in.AgeGroup))
	}
	{
		const prefix string = ",\"Rating\":"
		out.RawString(prefix)
		out.Float64(float64(in.Rating))
	}
	{
		const prefix string = ",\"RatingCount\":"
		out.RawString(prefix)
		out.Int(int(in.RatingCount))
	}
	{
		const prefix string = ",\"PersonalRating\":"
		out.RawString(prefix)
		out.Int64(int64(in.PersonalRating))
	}
	{
		const prefix string = ",\"ActorList\":"
		out.RawString(prefix)
		if in.ActorList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.ActorList {
				if v11 > 0 {
					out.RawByte(',')
				}
				(v12).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"PathToAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToAvatar))
	}
	{
		const prefix string = ",\"PathToSliderAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToSliderAvatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Movie) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Movie) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Movie) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Movie) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels5(l, v)
}
func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels6(in *jlexer.Lexer, out *GetMovieList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Limit":
			out.Limit = int(in.Int())
		case "Page":
			out.Page = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels6(out *jwriter.Writer, in GetMovieList) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Limit\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Limit))
	}
	{
		const prefix string = ",\"Page\":"
		out.RawString(prefix)
		out.Int(int(in.Page))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetMovieList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetMovieList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetMovieList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetMovieList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels6(l, v)
}
func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels7(in *jlexer.Lexer, out *Genre) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			out.ID = uint64(in.Uint64())
		case "Name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels7(out *jwriter.Writer, in Genre) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"Name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Genre) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Genre) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Genre) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Genre) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels7(l, v)
}
func easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels8(in *jlexer.Lexer, out *Actor) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			out.ID = uint64(in.Uint64())
		case "Name":
			out.Name = string(in.String())
		case "Surname":
			out.Surname = string(in.String())
		case "Patronymic":
			out.Patronymic = string(in.String())
		case "Description":
			out.Description = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels8(out *jwriter.Writer, in Actor) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"Name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"Surname\":"
		out.RawString(prefix)
		out.String(string(in.Surname))
	}
	{
		const prefix string = ",\"Patronymic\":"
		out.RawString(prefix)
		out.String(string(in.Patronymic))
	}
	{
		const prefix string = ",\"Description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Actor) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Actor) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA97f39aeEncodeGithubComGoParkMailRu20202JigglypufInternalPkgModels8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Actor) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Actor) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA97f39aeDecodeGithubComGoParkMailRu20202JigglypufInternalPkgModels8(l, v)
}
